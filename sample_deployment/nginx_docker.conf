events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate     /etc/nginx/cert.crt;
        ssl_certificate_key /etc/nginx/cert.key;

        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # First libression_library directory
        location /libression_photos {
            return 301 $scheme://$host$uri/;
        }

        location /libression_photos/ {
            alias /var/www/webdav/libression_photos/;

            dav_methods PUT DELETE MKCOL COPY MOVE;
            dav_access user:rw group:r all:r;

            # Allow all WebDAV methods
            add_header Allow "GET,HEAD,PUT,DELETE,MKCOL,COPY,MOVE,PROPFIND,OPTIONS" always;
            add_header DAV "1,2" always;
            add_header MS-Author-Via "DAV" always;

            client_max_body_size 0;
            create_full_put_path on;
            autoindex on;
            autoindex_format json; # Use JSON format instead of HTML
            autoindex_exact_size on;

            # Allow all methods including PROPFIND
            if ($request_method !~ ^(GET|HEAD|PUT|DELETE|MKCOL|COPY|MOVE|PROPFIND|OPTIONS)$) {
                return 405;
            }
        }

        # Secure readonly
        location /readonly_libression_photos/ {
            alias /var/www/webdav/libression_photos/;
            auth_basic off;  # Turn off basic auth for presigned URLs

            # Use secure_link with expiry - note the comma format
            secure_link "$arg_md5,$arg_expires";
            secure_link_md5 "$arg_expires$uri libression_secret_key";

            # Security check - deny if secure_link is 0 or empty
            if ($secure_link = "" ) { return 403; }
            if ($secure_link = "0" ) { return 410; }

            # WebDAV config
            limit_except GET HEAD { deny all; }
            client_max_body_size 0;
            autoindex off;

            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

        # Second libression_photos_cache directory
        location /libression_photos_cache {
            return 301 $scheme://$host$uri/;
        }
        location /libression_photos_cache/ {
            alias /var/www/webdav/libression_photos_cache/;

            dav_methods PUT DELETE MKCOL COPY MOVE;
            dav_access user:rw group:rw all:r;

            # Allow all WebDAV methods
            add_header Allow "GET,HEAD,PUT,DELETE,MKCOL,COPY,MOVE,PROPFIND,OPTIONS" always;
            add_header DAV "1,2" always;
            add_header MS-Author-Via "DAV" always;

            client_max_body_size 0;
            create_full_put_path on;
            autoindex on;
            autoindex_format json; # Use JSON format instead of HTML
            autoindex_exact_size on;

            # Allow all methods including PROPFIND
            if ($request_method !~ ^(GET|HEAD|PUT|DELETE|MKCOL|COPY|MOVE|PROPFIND|OPTIONS)$) {
                return 405;
            }
        }

        # Secure readonly
        location /readonly_libression_photos_cache/ {
            alias /var/www/webdav/libression_photos_cache/;
            auth_basic off;  # Turn off basic auth for presigned URLs

            # Use secure_link with expiry - note the comma format
            secure_link "$arg_md5,$arg_expires";
            secure_link_md5 "$arg_expires$uri libression_secret_key";

            # Security check - deny if secure_link is 0 or empty
            if ($secure_link = "" ) { return 403; }
            if ($secure_link = "0" ) { return 410; }

            # WebDAV config
            limit_except GET HEAD { deny all; }
            client_max_body_size 0;
            autoindex off;

            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

    }
}
